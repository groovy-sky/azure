{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": "[resourceGroup().location]"
        },
        "networkSecurityGroupRules": {
            "type": "Array",
            "defaultValue" : [{"name":"SSH","properties":{"priority":300,"protocol":"TCP","access":"Allow","direction":"Inbound","sourceAddressPrefix":"*","sourcePortRange":"*","destinationAddressPrefix":"*","destinationPortRange":"22"}}]
        },
        "addressPrefixes": {
            "type": "String",
            "defaultValue": "10.173.44.0/24"
        },
        "storageAccountType": {
            "type": "String",
            "defaultValue": "Standard_LRS"
        },
        "storageAccountKind": {
            "type": "String",
            "defaultValue": "Storage"
        },
        "virtualMachineSize": {
            "type": "String",
            "defaultValue": "Standard_B1s"
        },
        "adminUsername": {
            "type": "String",
            "defaultValue": "sup3radm1nk0"
        },
        "vmSubnetName": {
            "type": "string",
            "defaultValue": "vm-subnet"
        },
        "vmSubnetRange": {
            "type": "string",
            "defaultValue": "10.173.44.0/25"
        },
        "endpointSubnetName": {
            "type": "string",
            "defaultValue": "endpoint-subnet"
        },
        "endpointSubnetRange": {
            "type": "string",
            "defaultValue": "10.173.44.128/26"
        },
        "dnsSubnetName": {
            "type": "string",
            "defaultValue": "dns-subnet"
        },
        "dnsSubnetRange": {
            "type": "string",
            "defaultValue": "10.173.44.192/26"
        },
        "privateDnsZoneName":{
          "type": "string",
          "defaultValue": "privatelink.file.core.windows.net"
        }
    },
    "variables": {
        "virtualMachineName": "[uniqueString(subscription().subscriptionId)]",
        "storageAccountName": "[uniqueString(subscription().subscriptionId)]",
        "fileStorageAccountName":  "[concat('file',uniquestring(subscription().subscriptionId))]",
        "adminPassword": "[concat('SUPERP@SSW0RD',uniqueString(subscription().subscriptionId))]",
        "networkInterfaceName": "[concat('nic-',uniquestring(subscription().subscriptionId))]",
        "publicIpAddressName": "[concat('pip-',uniquestring(subscription().subscriptionId))]",
        "networkSecurityGroupName": "[concat('nsg-',uniquestring(subscription().subscriptionId))]",
        "virtualNetworkName": "[concat('net-',uniquestring(subscription().subscriptionId))]",
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "vmSubnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('vmSubnetName'))]",
        "endpointSubnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('endpointSubnetName'))]",
        "dnsSubnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('dnsSubnetName'))]",
        "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts',variables('fileStorageAccountName'))]",
        "privateEndpointName": "[concat('endpoint-',variables('fileStorageAccountName'))]",
        "pvtendpointdnsgroupname": "[concat(variables('privateEndpointName'),'/mydnsgroupname')]",
        "storageContainerUri": "[concat(concat('https://', variables('storageAccountName'), '.blob.core.windows.net/'), 'vhds/')]"
    },
    "resources": [
      {
        "apiVersion": "2019-06-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('fileStorageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "kind": "StorageV2",
        "properties": {
          "accessTier": "Hot",
          "networkAcls": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          },
          "allowBlobPublicAccess": true
        }
      },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('vmSubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": ["[parameters('addressPrefixes')]"]
                },
                "subnets": [
          {
            "name": "[parameters('vmSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vmSubnetRange')]"
            }
          },
          {
            "name": "[parameters('endpointSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('endpointSubnetRange')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          },
          {
            "name": "[parameters('dnsSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('dnsSubnetRange')]"
            }
          }
        ]
            }
        },
      {
        "type": "Microsoft.Network/privateEndpoints",
        "apiVersion": "2020-06-01",
        "name": "[variables('privateEndpointName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[variables('vnetId')]"
        ],
        "properties": {
          "subnet": {
            "id": "[variables('endpointSubnetRef')]"
          },
          "privateLinkServiceConnections": [
            {
              "name": "[variables('privateEndpointName')]",
              "properties": {
                "privateLinkServiceId": "[variables('privateLinkServiceId')]",
                "groupIds": [
                  "file"
                ]
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/privateDnsZones",
        "apiVersion": "2020-01-01",
        "name": "[parameters('privateDnsZoneName')]",
        "location": "global",
        "dependsOn": [
            "[variables('vnetId')]"
        ],
        "properties": ""
      },
      {
        "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
        "apiVersion": "2020-01-01",
        "name": "[concat(parameters('privateDnsZoneName'), '/', parameters('privateDnsZoneName'), '-link')]",
        "location": "global",
        "dependsOn": [
          "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
          "[variables('vnetId')]"
        ],
        "properties": {
          "registrationEnabled": false,
          "virtualNetwork": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('pvtendpointdnsgroupname')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
          "[variables('privateEndpointName')]"
        ],
        "properties": {
          "privateDnsZoneConfigs": [
            {
              "name": "config1",
              "properties": {
                "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              }
            }
          ]
        }
      },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "[parameters('storageAccountKind')]",
            "properties": {
                "minimumTlsVersion": "TLS1_2"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "vhd": {
                            "uri": "[concat(variables('storageContainerUri'), variables('virtualMachineName'), 'vm-os.vhd')]"
                        },
                        "name": "[variables('virtualMachineName')]"
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                }
            }
        },
          {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'),'/installcustomscript')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "whoami"
        }
      }
    }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}